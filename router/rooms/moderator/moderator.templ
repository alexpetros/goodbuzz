package moderator

import "net/http"
import "fmt"

import "goodbuzz/lib"
import "goodbuzz/router/rooms"

func Get(w http.ResponseWriter, r *http.Request) {
    room_id, err := lib.GetIntParam(r, "id")
    if err != nil {
      lib.BadRequest(w, r)
      return
    }

    room, notFoundErr := rooms.GetRoom(r.Context(), room_id)
    if notFoundErr != nil {
      http.NotFound(w, r)
      return
    }

    title := fmt.Sprintf("%s - Moderator", room.Name())
    content := index(title, room.Id())
    lib.Render(w, r, title, content)
}

templ index(title string, roomId int64) {
<h1>{title}</h1>

<main class="moderator" hx-ext="sse" sse-connect="./moderator/live">

<section class="live-view">
  <h2>Live View</h2>
  <p>
  Buzzer Status:
  <span class="buzzer-status" sse-swap="status" hx-swap="innerHTML"></span>
  </p>

  <button hx-delete={ fmt.Sprintf("/rooms/%d/buzz?mode=all", roomId) }>Full Reset</button>
  <button hx-delete={ fmt.Sprintf("/rooms/%d/buzz?mode=partial", roomId) }>Partial Reset</button>
</section>

<section class="players">
  <h2>Player Controls</h2>
  <div sse-swap="controls" hx-swap="innerHTML"></div>
</section>

<section class="logs">
  <h2>Log</h2>
  <div
    class="log-container"
    sse-swap="log"
    hx-swap="beforeend"
    hx-on::after-swap="this.scrollTop = this.lastChild.offsetTop"
  ></div>
</section>

</main>

}

