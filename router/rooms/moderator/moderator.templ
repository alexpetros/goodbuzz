package moderator

import "net/http"
import "fmt"

import "goodbuzz/lib"
import "goodbuzz/router/rooms"

func Get(w http.ResponseWriter, r *http.Request) {
    room_id, err := lib.GetIntParam(r, "id")
    if err != nil {
      lib.BadRequest(w, r)
      return
    }

    room := rooms.GetRoom(r.Context(), room_id)

    if room == nil {
      http.NotFound(w, r)
      return
    }

    title := fmt.Sprintf("%s - Moderator", room.Name())
    content := index(title, room)
    lib.Render(w, r, title, content)
}

templ index(title string, room *rooms.Room) {
<h1>{title}</h1>

<main hx-ext="sse" sse-connect="./moderator/live">

<section>
  <h2>Live View</h2>
  <p>
  Buzzer Status:
  <span class="buzzer-status" sse-swap="status" hx-swap="innerHTML">
    if room.Status() == rooms.Unlocked {
      <span class="unlocked">Unlocked</span>
    } else if room.Status() == rooms.Locked {
      <span class="locked">Locked</span>
    } else {
      <span class="waiting">waiting</span>
    }
  </span>
  </p>

  <button hx-delete={ fmt.Sprintf("/rooms/%d/buzz?mode=all", room.Id()) }>Full Reset</button>
  <button hx-delete={ fmt.Sprintf("/rooms/%d/buzz?mode=partial", room.Id()) }>Partial Reset</button>
</section>

<section class="controls">
  <h2>Player Controls</h2>
  <div sse-swap="controls" hx-swap="innerHTML"></div>
</section>

<section sse-swap="log" hx-swap="beforeend">
  <h2>Log</h2>
</section>

</main>

}

