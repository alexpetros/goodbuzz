package rooms

import "net/http"
import "fmt"

import "goodbuzz/lib"


func Get(w http.ResponseWriter, r *http.Request) {
    room_id :=  r.PathValue("id")
    room := lib.GetRoom(room_id)

    if room == nil {
      http.NotFound(w, r)
      return
    }

    content := index(room)
    lib.Render(w, r, content)
}

func Live(w http.ResponseWriter, r *http.Request) {
    // TODO "waiting" button handler
}

templ index(room *lib.Room) {
<title>Buzzer Room</title>

<h1>Room #{fmt.Sprintf("%d", room.Id())}</h1>

if room.Status() == lib.Unlocked {
  @UnlockedBuzzer(room.Id())
} else {
  <button class="buzzer" disabled>Waiting...</button>
}

}

templ UnlockedBuzzer (room_id int64) {
  <button class="buzzer" onclick={ buzz(room_id) }>Buzz</button>
}

templ LockedBuzzer (room_id int64) {
  <button class="buzzer"
    disabled
    hx-get="/rooms/%d/status"
    hx-trigger="every 500ms"
    >Waiting...
    </button>
}

script buzz(room_id int64) {
  const button = document.querySelector('.buzzer')
  fetch(`./${room_id}/buzz`, { method: 'PUT' })

  button.setAttribute('disabled', 'true')
  button.innerText = 'Waiting...'
  button.setAttribute('hx-ext', 'sse')
  button.setAttribute('sse-connect', `./${room_id}/buzz`)
  button.setAttribute('sse-swap', 'status')
  button.setAttribute('hx-swap', 'outerHTML')
  htmx.process(button)
}
