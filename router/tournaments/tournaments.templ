package tournaments

import (
  "net/http"
  "goodbuzz/lib"
  "goodbuzz/lib/db"
  "goodbuzz/lib/room"
  "goodbuzz/router/rooms"
	"fmt"
)

func Get(w http.ResponseWriter, r *http.Request) {
    tournament := r.Context().Value("tournament").(*db.Tournament)
    isAdmin := r.Context().Value("isAdmin").(bool)
    isMod := r.Context().Value("isMod").(bool)

    var content templ.Component

    rooms := rooms.GetRoomsForTournament(r.Context(), tournament.Id())

    if isAdmin {
      content = admin(tournament, rooms)
    } else if isMod {
      content = mod(tournament, rooms)
    } else {
      content = player(tournament, rooms)
    }

    lib.Render(w, r, tournament.Name(), content)
}

templ admin (tournament *db.Tournament, rooms []room.Room) {
<style>
.tournament-details label { display: block; margin: 10px 0;}
</style>

<h1>{tournament.Name()}</h1>

<h2>Rooms</h2>
<p>
  Click into the rooms to edit or delete them. You can also join the rooms as either a player or
moderator.
</p>
<table class="rooms">
  <tr>
    <th>Name</th>
    <th colspan="2">Join the Room</th>
    <th>Description</th>
  </tr>
  for _, room := range rooms {
    <tr>
        <td><a href={templ.SafeURL(room.EditUrl())}>{room.Name}</a></td>
        <td><a href={templ.URL(room.PlayerUrl())}>Player</a></td>
        <td><a href={templ.URL(room.ModeratorUrl())}>Moderator</a></td>
        <td style="width: 40%">{ room.Description }</td>
    </tr>
  }
</table>

<form style="width: 30%; padding: 10px" hx-post={tournament.Url()}>
  <input name="name" type="text">
  <button>Add new</button>
</form>

<h2>Settings</h2>
<form
  hx-put={tournament.Url()}
  class="tournament-details"
  hx-on::after-request="window.scrollTo(0, 0)"
  >
  <label>Name: <input name="name" type="text" value={tournament.Name()}></label>
  <label>Password: <input name="password" type="text" value={tournament.Password()}></label>
  <div><button class="action edit">Submit</button></div>
</form>

<h2>Delete</h2>
<form
  hx-delete={tournament.Url()}
  hx-confirm={fmt.Sprintf("Are you sure you want to delete %s?", tournament.Name())}>
  <button class="action delete">Delete Tournament</button>
</form>

}

templ mod(tournament *db.Tournament, rooms []room.Room) {
<h1>{tournament.Name()}</h1>

<h2>Rooms</h2>
<table class="rooms">
  <tr>
    <th>Name</th>
    <th colspan="2">Join Links</th>
    <th>Description</th>
  </tr>
  for _, room := range rooms {
    <tr>
        <td>{room.Name}</td>
        <td><a href={templ.URL(room.PlayerUrl())}>Player</a></td>
        <td><a href={templ.URL(room.ModeratorUrl())}>Moderator</a></td>
        <td>{ room.Description }</td>
    </tr>
  }
</table>
}

templ player(tournament *db.Tournament, rooms []room.Room) {
<div class="notice logout">
  <div>You are currently competing in <strong>{ tournament.Name() }</strong></div>
  <button hx-delete="/login" class="action edit">Switch Tournaments</button>
</div>


<h1>Tournament Rooms</h1>
<table class="rooms player">
  <tr>
    <th>Room</th>
    <th>Description</th>
  </tr>
  for _, room := range rooms {
    <tr>
        <td><a href={templ.URL(room.PlayerUrl())}>{room.Name}</a></td>
        <td>{ room.Description }</td>
    </tr>
  }
</table>
}
