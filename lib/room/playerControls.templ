package room

import (
    "fmt"
    "goodbuzz/lib"
    "goodbuzz/lib/room/users"
)

func PlayerListEvent(players []*users.Player) string {
	return lib.FormatEventComponent("players", PlayerTable(players))
}

func WaitingBuzzerEvent() string {
	return lib.FormatEventComponent("buzzer", WaitingBuzzer())
}

func LockedBuzzerEvent() string {
	return lib.FormatEventComponent("buzzer", LockedBuzzer())
}

func ReadyBuzzerEvent(resetToken string) string {
	return lib.FormatEventComponent("buzzer", ReadyBuzzer(resetToken))
}

templ TokenInput(token string) {
  <input type="hidden" name="token" value={token} sse-swap="token" hx-swap="outerHTML">
}

templ WaitingBuzzer() {
<button class="buzzer locked" disabled >
  Waiting
</button>
}

templ LockedBuzzer() {
<button class="buzzer locked" disabled >
  Locked
</button>
}

templ PlayerTable(players []*users.Player) {
<table>
  for _, player := range players {
  <tr>
    <td>{player.Name()}</td>
  </tr>
  }
</table>
}

templ ReadyBuzzer(resetToken string) {
<button
  class="buzzer"
  hx-put="./buzz"
  hx-on::before-request="disableBuzzer()"
  hx-vals={fmt.Sprintf("\"resetToken\": \"%s\"", resetToken)}
  >Buzz
</button>
}
