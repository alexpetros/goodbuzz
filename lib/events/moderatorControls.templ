package events

import (
    "fmt"
    "goodbuzz/lib"
    "goodbuzz/lib/room/users"
)

func LockedStatusEvent(player *users.Player) string {
  var data string
  if player == nil {
    data = "<div class=\"status locked\">Locked by (disconnected player)</div>"
  } else {
    data = fmt.Sprintf("<div hx-on::load=\"playBuzz()\" class=\"status locked\">Locked by %s</div>", player.Name)
  }

  return lib.FormatEventString("status", data)
}

func ProcessingStatusEvent() string {
  data := "<div class=\"status processing\">Processing...</div>"
  return lib.FormatEventString("status", data)
}

func UnlockedStatusEvent() string {
  data := "<div class=\"status unlocked\">Unlocked</div>"
  return lib.FormatEventString("status", data)
}

func ModeratorPlayerControlsEvent(roomId int64, players []*users.Player) string {
	component := ModeratorPlayerControls(roomId, players)
	return lib.FormatEventComponent("controls", component)
}

templ ModeratorPlayerControls(roomId int64, players []*users.Player) {
  <table>
    for _, player := range players {
    <tr>
      <td>
        <editable-field
          hx-include="this"
          name="name"
          value={player.Name}
          savefunc={fmt.Sprintf("htmx.ajax('PUT', '/rooms/%d/player/%s', { source: this })", roomId, player.Token)}
          ></editable-field>
      </td>
      <td>
      if player.IsLocked {
        <button hx-delete={fmt.Sprintf("./locks/%s", player.Token)}>
          Unlock
        </button>
      } else {
        <button disabled>Unlock</button>
      }
      </td>
      <td>
        <button hx-delete={fmt.Sprintf("./players/%s", player.Token)}>
          Kick
        </button>
      </td>
    </tr>
    }
  </table>
}
